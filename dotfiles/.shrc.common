# vim:set fdm=marker:
#
# File:        .shrc.common
# Maintainer:  Shintaro Kaneko <kaneshin0120@gmail.com>
# Last Change: 05-Jul-2014.

# alias
alias ce='cd ../'
alias ls='ls -F'
alias la='ls -a'
alias ll='ls -la'
alias sl="ls"

alias grep='grep --color=always'
alias ngrep='grep -n --color=always'
alias fgrep='fgrep --color=always'
alias egrep='egrep --color=always'

alias less='less -R'

alias o='git ls-files | peco | xargs open'

# alias for vim
alias vi='vim -u $HOME/.virc'
sw_vers=`which sw_vers 2>&1`
if [[ $? == 0 ]]; then
    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
fi

alias jenkins='java -jar /usr/local/opt/jenkins/libexec/jenkins.war'

set_gitst()
{
    case $1 in
    on )
        GITST=1
    ;;
    off )
        GITST=0
    ;;
    esac
}

set_gitst on
alias gitst='set_gitst'
parse_git_status()
{
    if [[ $GITST != 0 ]]; then
        git status -s 2> /dev/null
    fi
}

parse_git_branch()
{
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
}

function gi()
{
    curl http://www.gitignore.io/api/$@ ;
}

function git_checkout_peco()
{
    branches='git branch --verbose'
    if [[ $1 == '--all' || $1 == '-a' ]]; then
        remote_flag=1
        branches="${branches} $1"
        echo $branches
    fi
    target=`git branch --verbose | peco | awk '{sub("\\\\*", " "); print $1}' | xargs git checkout`
    echo $target
}

alias blp='bl | peco | chbarg'
function chbarg()
{
    target=`awk '{print $1}' | sed -e 's/^remotes\///'`
    branch=`echo $target | awk '{sub("/", "-"); print $0;}'`
    git checkout -b $branch $target
    if [[ $? != 0 ]]; then
        git checkout $branch
    fi
}

function bl()
{
    branches=`git branch -a 2> /dev/null | sed -e 's/^..//'` && tags=`git tag`
    result=`echo $branches "\n" $tags | awk '{print $1}'`
    while read LINE
    do
        echo $LINE " " `git log --oneline -n 1 $LINE`
    done <<< $result
}

